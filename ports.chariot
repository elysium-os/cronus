// autoconf
source/autoconf {
    url: https://ftp.gnu.org/gnu/autoconf/autoconf-2.72.tar.gz
    b2sum: 48fff54704176cbf2642230229c628b75c43ef3f810c39eea40cae91dd02e1203d04a544407de96f9172419a94b952865909d969d9e9b6c10879a9d9aeea5ad0
    type: tar.gz
    patch: autoconf.diff
}

source/autoconf_2.69 {
    url: https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz
    b2sum: 7e8a513bbfcabadad1577919c048cc05ca0a084788850b42570f88afc2fa9c25fb32277412f135b81ba1c0d8079465a6b581d2d78662c991d2183b739fac407c
    type: tar.gz
}

host/autoconf {
    source: autoconf
    configure { @(source_dir)/configure --prefix=@(prefix) }
    build { make -j@(thread_count) }
    install { DESTDIR=@(install_dir) make install }
}

host/autoconf_2.69 {
    source: autoconf_2.69
    configure { @(source_dir)/configure --prefix=@(prefix) }
    build { make -j@(thread_count) }
    install { DESTDIR=@(install_dir) make install }
}

// automake
source/automake {
    url: https://ftp.gnu.org/gnu/automake/automake-1.16.5.tar.gz
    b2sum: 5ccdcbe2d3deb2b0baed4a8590b07714cd7098fbda251afebe83232ed03f4db84abbe023cf0544622dbc5137254347273247428eb5420564a167b86de95d113e
    type: tar.gz
    dependencies [ source/autoconf ]
    strap {
        cp @(sources_dir)/autoconf/build-aux/config.guess ./lib
        cp @(sources_dir)/autoconf/build-aux/config.sub ./lib
    }
}

host/automake {
    source: automake
    dependencies [ host/autoconf image/gcc ]
    configure { @(source_dir)/configure --prefix=@(prefix) }
    build { make -j@(thread_count) }
    install { DESTDIR=@(install_dir) make install-strip }
}

// libtool
source/libtool {
    url: https://ftp.gnu.org/gnu/libtool/libtool-2.5.4.tar.xz
    b2sum: 47de3c49a690d44d7ddd5e3b5e4090c91dc5fbb9c40fc4a3963e150fb7329326ee3e21b8c149974726171c4b0380028e0efc7a369c4f04357eea46f69852e1cc
    type: tar.xz
    dependencies [ host/autoconf host/automake ]
    strap { LIBTOOLIZE=true autoreconf -fvi}
}

host/libtool {
    source: libtool
    dependencies [ host/autoconf host/automake image/help2man image/gcc ]
    configure { @(source_dir)/configure --prefix=@(prefix) }
    build { make -j@(thread_count) }
    install { DESTDIR=@(install_dir) make install-strip }
}

// binutils
source/binutils {
    url: https://ftp.gnu.org/gnu/binutils/binutils-2.44.tar.gz
    b2sum: f676664064380a9218bb031e68b3b8c7324ae8079d26f9940d5b411396f7dac3843e02b6ae483c57c2a13fda5ba95c30a33920e39866cc82cc39ad53c25aa0ec
    type: tar.gz
    patch: binutils.diff
    dependencies [ source/support source/libtool host/autoconf_2.69 host/automake host/libtool ]
    strap {
        @(sources_dir)/support/reconfigure.sh -I"$(realpath ./config)"

        cp -pv @(sources_dir)/libtool/build-aux/{config.sub,config.guess,install-sh} libiberty/
    }
}

host/binutils {
    source: binutils
    dependencies [ image/base-devel ]
    configure {
        @(source_dir)/configure \
            --with-sysroot=@(sysroot_dir) \
            --prefix=@(prefix) \
            --target=x86_64-elysium \
            --enable-targets=x86_64-elf,x86_64-pe \
            --disable-nls \
            --disable-werror
    }
    build { PATH="$PATH:/usr/bin/core_perl" make -j@(thread_count) }
    install { DESTDIR=@(install_dir) make install-strip }
}

// gcc
source/gcc_host {
    url: https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.gz
    b2sum: 7d429d2803b88d8cc9da460fd3a0bd0b888fbe0cc0338e7ed04c71599bd87b475836c8a8fb563338ee0f83e2b4d988427c063ae6c2bd0fc3ab30b07a4e9e7cd0
    type: tar.gz
    patch: gcc-host.diff
    dependencies [ source/support source/libtool host/autoconf_2.69 host/automake host/libtool ]
    strap {
        ./contrib/download_prerequisites

        rm -rf gettext*

        @(sources_dir)/support/reconfigure.sh -I"$(realpath ./config)"

        cp -pv @(sources_dir)/libtool/build-aux/{config.sub,config.guess,install-sh} libiberty/
        cp -pv @(sources_dir)/libtool/build-aux/{config.sub,config.guess,install-sh} libgcc/
    }
}

host/gcc_bootstrap {
    source: gcc_host
    dependencies [ *host/binutils target/mlibc_headers image/gcc *image/libisl *image/libmpc ]
    configure {
        CFLAGS="-O2" CXXFLAGS="-O2" @(source_dir)/configure \
            --prefix=@(prefix) \
            --target=x86_64-elysium \
            --with-sysroot=@(sysroot_dir) \
            --enable-languages=c,c++ \
            --disable-nls \
            --disable-multilib \
            --disable-shared \
            --enable-initfini-array \
            --without-headers \
            --without-newlib
    }
    build {
        export PATH="$PATH:/usr/bin/core_perl"
        make -j@(thread_count) inhibit_libc=true all-gcc
        make -j@(thread_count) inhibit_libc=true all-target-libgcc
    }
    install {
        DESTDIR=@(install_dir) make install-gcc
        DESTDIR=@(install_dir) make install-target-libgcc
    }
}

host/gcc {
    source: gcc_host
    dependencies [ *host/binutils *target/mlibc_headers *target/mlibc image/gcc *image/libisl *image/libmpc ]
    configure {
        CFLAGS="-O2" CXXFLAGS="-O2" @(source_dir)/configure \
            --prefix=@(prefix) \
            --target=x86_64-elysium \
            --with-sysroot=@(sysroot_dir) \
            --enable-languages=c,c++ \
            --disable-nls \
            --disable-multilib \
            --enable-initfini-array
    }
    build {
        export PATH="$PATH:/usr/bin/core_perl"
        make -j@(thread_count) all-gcc
        make -j@(thread_count) all-target-libgcc
    }
    install {
        DESTDIR=@(install_dir) make install-gcc
        DESTDIR=@(install_dir) make install-target-libgcc
    }
}

// pkgconf
source/pkgconf {
    url: https://github.com/pkgconf/pkgconf/archive/refs/tags/pkgconf-2.4.3.tar.gz
    b2sum: 031ae702ff002198c6ea700a4f7f73cf82f19be3827a448929334ebae5f972b0d973e2c43bd12b4a8a8e6d0c187a006fa36d5303b36b2965e1046b26f50a51e7
    type: tar.gz
    dependencies [ host/autoconf host/automake host/libtool ]
    strap { libtoolize -cfvi && autoreconf -fvi }
}

host/pkgconf {
    source: pkgconf
    dependencies [ host/autoconf host/automake host/libtool image/gcc ]
    configure { @(source_dir)/configure --prefix=@(prefix) }
    build { make -j@(thread_count) }
    install {
        DESTDIR=@(install_dir) make install-strip
        install -d @(install_dir)@(prefix)/share/pkgconfig/personality.d

        PERSONALITY_FILE="@(install_dir)@(prefix)/share/pkgconfig/personality.d/x86_64-elysium.personality"
        echo "Triplet: x86_64-elysium" >> $PERSONALITY_FILE
        echo "SysrootDir: @(sysroot_dir)" >> $PERSONALITY_FILE
        echo "DefaultSearchPaths: @(sysroot_dir)/usr/lib/pkgconfig:@(sysroot_dir)/usr/share/pkgconfig" >> $PERSONALITY_FILE
        echo "SystemIncludePaths: @(sysroot_dir)/usr/include" >> $PERSONALITY_FILE
        echo "SystemLibraryPaths: @(sysroot_dir)/usr/lib" >> $PERSONALITY_FILE

        ln -s pkgconf @(install_dir)@(prefix)/bin/x86_64-elysium-pkg-config
    }
}

// frigg
source/frigg {
    url: https://github.com/managarm/frigg.git
    type: git
    commit: 41b8f556db2646c4417d227b5174a66f03d86a43
}

target/frigg {
    source: frigg
    dependencies [ source/support host/pkgconf image/meson ]
    configure {
        meson setup \
            --cross-file @(sources_dir)/support/elysium.cross-file \
            --prefix=@(prefix) \
            --buildtype=release \
            --includedir=share/frigg/include \
            -Dbuild_tests=disabled \
            @(source_dir)
    }
    build { ninja -j@(thread_count) }
    install { DESTDIR=@(install_dir) ninja install }
}

// freestanding headers
source/freestanding_c_headers {
    url: https://github.com/osdev0/freestnd-c-hdrs.git
    type: git
    commit: 87956bbcad0e1934e708223913be53131311342d
}

source/freestanding_cxx_headers {
    url: https://github.com/osdev0/freestnd-cxx-hdrs.git
    type: git
    commit: 1cc6d4665e1e0ce4408c94616c8c4de4c19b9968
}

target/freestanding_c_headers {
    source: freestanding_c_headers
    build { cp -rpf @(source_dir)/* . }
    install { DESTDIR=@(install_dir) PREFIX=@(prefix) make install }
}

target/freestanding_cxx_headers {
    source: freestanding_cxx_headers
    build { cp -rpf @(source_dir)/* . }
    install { DESTDIR=@(install_dir) PREFIX=@(prefix) make install }
}

// mlibc
source/mlibc-sysdeps {
    url: mlibc-sysdeps
    type: local
}

source/mlibc {
    url: https://github.com/managarm/mlibc/archive/b25158194865c41c5b7747b71f7cfb023e172731.tar.gz
    b2sum: 522edd360162bf7090c79c9c41e1d0857b204bb9a50badb2c79d54ed1a909805fb94cd38a64de55e9702d162acc256d91c1b8daaf5457082cebe6942c888b19a
    type: tar.gz
    patch: mlibc.diff
    dependencies [ source/mlibc-sysdeps ]
    strap { cp -r @(sources_dir)/mlibc-sysdeps/elysium ./sysdeps/ }
}

target/mlibc_headers {
    source: mlibc
    dependencies [ source/support host/pkgconf image/meson ]
    configure {
        meson setup \
            --cross-file @(sources_dir)/support/elysium.cross-file \
            --prefix=@(prefix) \
            --buildtype=release \
            -Dheaders_only=true \
            -Dlinux_option=disabled \
            @(source_dir)
    }
    build { ninja -j@(thread_count) }
    install { DESTDIR=@(install_dir) ninja install }
}

target/mlibc {
    source: mlibc
    dependencies [
        source/support
        host/gcc_bootstrap
        host/pkgconf
        target/mlibc_headers
        target/frigg
        target/freestanding_c_headers
        target/freestanding_cxx_headers
        image/meson
    ]
    configure {
        meson setup \
            --cross-file @(sources_dir)/support/elysium.cross-file \
            --prefix=@(prefix) \
            --libdir=lib \
            --buildtype=debug \
            -Dno_headers=true \
            -Ddefault_library=both \
            -Dlinux_option=disabled \
            @(source_dir)
    }
    build { ninja -j@(thread_count) }
    install { DESTDIR=@(install_dir) ninja install }
}
